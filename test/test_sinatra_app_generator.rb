require File.join(File.dirname(__FILE__), "test_generator_helper.rb")

class TestSinatraAppGenerator < Test::Unit::TestCase
  include RubiGen::GeneratorTestHelper

  def setup
    bare_setup
  end

  def teardown
    bare_teardown
  end

  # Some generator-related assertions:
  #   assert_generated_file(name, &block) # block passed the file contents
  #   assert_directory_exists(name)
  #   assert_generated_class(name, &block)
  #   assert_generated_module(name, &block)
  #   assert_generated_test_for(name, &block)
  # The assert_generated_(class|module|test_for) &block is passed the body of the class/module within the file
  #   assert_has_method(body, *methods) # check that the body has a list of methods (methods with parentheses not supported yet)
  #
  # Other helper methods are:
  #   app_root_files - put this in teardown to show files generated by the test method (e.g. p app_root_files)
  #   bare_setup - place this in setup method to create the APP_ROOT folder for each test
  #   bare_teardown - place this in teardown method to destroy the TMP_ROOT or APP_ROOT folder after each test

  def test_generate_app_without_options
    run_generator('sinatra_app', [APP_ROOT], sources)
    assert_basic_paths_and_files
  end

  def test_generate_app_with_vendor_option
    run_generator('sinatra_app', [APP_ROOT, '--vendor'], sources)
    assert_basic_paths_and_files
    assert_directory_exists 'vendor/sinatra/lib'
  end
  
  def test_generate_app_with_tiny_option
    run_generator('sinatra_app', [APP_ROOT, '--tiny'], sources)
    assert_generated_file   'config.ru'
    assert_generated_file   'app.rb'
    assert_generated_file   'Rakefile'
  end
  
  def test_generate_app_with_init_option
    run_generator('sinatra_app', [APP_ROOT, '-i'], sources)
    assert_basic_paths_and_files
    assert_directory_exists '.git'
  end
  
  private
  def assert_basic_paths_and_files
    assert_directory_exists 'lib'
    assert_directory_exists 'test'
    assert_directory_exists 'public'
    assert_directory_exists 'views'
    assert_generated_file   'config.ru'
    assert_generated_file   'app.rb'
    assert_generated_file   'Rakefile'
    assert_generated_module  "lib/#{app_name}"
  end
    
  
  def sources
    [RubiGen::PathSource.new(:test, File.join(File.dirname(__FILE__),"..", generator_path))]
  end

  def app_name
    File.basename(APP_ROOT)
  end

  def generator_path
    "app_generators"
  end
end
